name: Deploy to AWS EC2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies locally
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Copy application files to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "."
          target: "/home/${{ secrets.EC2_USER }}/app"

      - name: Deploy application on EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/app
            # Install python3-venv to create virtual environment
            sudo apt update
            sudo apt install -y python3-venv
            # Create virtual environment, activate and install dependencies
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            # Create directory for uploaded files if needed
            mkdir -p uploads
            # Terminate running instance of the application (if it exists)
            pkill gunicorn || true
            # Start the application using gunicorn (available on port 8000)
            nohup ./venv/bin/gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 main:app > app.log 2>&1 & 